#!/bin/awk -f

function lower_bound(array, target) {
    low = 1
    high = length(array) + 1
    while ( low < high ) {
        mid = int( ( low + high ) / 2 )
        if ( target <= array[mid] ) {
            high = mid
        } else {
            low = mid + 1
        }
    }
    return low + 1
}

function push(A, B) {
    A[length(A) + 1] = B
}

BEGIN {
    query = 1

    # declare array
    query_addresses[0] = 0
    delete query_addresses[0]

    # declare array
    addresses[0] = 0
    delete addresses[0]
}

{
    val = strtonum($1)
    if ( query ) {
        if ( val ) {
            push(query_addresses, val)
        } else {
            query = 0
        }
    } else {
        push(addresses, val)
    }
}

# TODO: print out entire input line on the right hand side of the equals sign

END {
    asort(addresses, sorted, "@val_num_asc")
    len = length(query_addresses)
    for ( i = 1 ; i <= len; ++i ) {
        idx = lower_bound(sorted, query_addresses[i])
        printf("0x%08X = 0x%08X\n", query_addresses[i], addresses[idx])
    }
}
