#!/usr/bin/env sh

# NOTE:
# This file is provided as a starting point for system specific shell settings

# enable bash completion

. ${HOME}/.bash/bundle/bash-completion/bash_completion

# enable automatic caching for certain bash completion scripts upon load

export _wmic_auto_init_cache=1
export _cleartool_auto_init_cache=1

# X settings

if [ -z ${DISPLAY} ]; then
    export DISPLAY=$(find /tmp/.X11-unix/ -type s -printf '%P\n' -quit 1 2> /dev/null | sed 's/X/:/')
fi

if [ -z ${DISPLAY} ]; then
    export DISPLAY=:0
    command X "${DISPLAY}" -multiwindow -silent-dup-error > /dev/null 2>&1 &
fi

# load path from file

if [ -z "${_path_cache_set}" ]; then

    export _path_cache_sfx=""
    export _path_cache_pfx=""
    export _path_cache_set=""

    _cache_load path

    PATH="${_path_cache_pfx}${PATH}${_path_cache_sfx}"

fi

# discover path

if [ -z "${_path_cache_set}" ]; then

    # path suffixes

    _path_cache_sfx="$(${HOME}/.bash-paths 2> /dev/null)"

    # path prefixes

    _path_cache_pfx="${HOME}/.bash/scripts:${_path_cache_pfx}"

    # mark discovery complete

    _path_cache_set=true

    # save to file

    _cache_save path _path_cache_

    # set path

    PATH="${_path_cache_pfx}${PATH}${_path_cache_sfx}"

fi

# load manpath from file

if [ -z "${_manpath_cache_set}" ]; then

    export _manpath_cache_sfx=""
    export _manpath_cache_pfx=""
    export _manpath_cache_set=""

    _cache_load manpath

    MANPATH="${_manpath_cache_pfx}${MANPATH}${_manpath_cache_sfx}"

fi

# discover manpath

if [ -z "${_manpath_cache_set}" ]; then

    # discover man directories

    _manpath_cache_sfx="${_manpath_cache_sfx}$(find /usr /opt "${HOME}" -maxdepth 4 -type d -name man -printf :%p 2> /dev/null)"

    # mark discovery complete

    _manpath_cache_set=true

    # save to file

    _cache_save manpath _manpath_cache_

    # set manpath

    MANPATH="${_manpath_cache_pfx}${MANPATH}${_manpath_cache_sfx}"

fi

export MANPATH

# set INFOPATH so it includes users' private info if it exists

if [ -d "${HOME}/info" ]; then
    # find /usr /opt ${HOME} -maxdepth 4 -type f -regex '.*[^/]\.info\(\-[0-9]+\)?\(\.gz\)?' -printf '%h\n' | sort | uniq
    INFOPATH="${HOME}/info:${INFOPATH}"
fi

# set symbol path for symbolic debugging on windows

export _NT_SYMBOL_PATH="srv*C:\\symbols*https://msdl.microsoft.com/download/symbols"


