#!/usr/bin/env sh

# NOTE:
# This file is provided as a starting point for system specific shell settings

# enable bash completion

. ${HOME}/.bash/bundle/bash-completion/bash_completion

# enable automatic caching for certain bash completion scripts upon load

export _wmic_auto_init_cache=1
export _cleartool_auto_init_cache=1

# X settings

if [ -z ${DISPLAY} ]; then
    export DISPLAY=$(find /tmp/.X11-unix/ -type s -printf '%P\n' -quit 1 2> /dev/null | sed 's/X/:/')
fi

if [ -z ${DISPLAY} ]; then
    export DISPLAY=:0
    command X "${DISPLAY}" -multiwindow -silent-dup-error > /dev/null 2>&1 &
fi

# load path from file

if [ -z "${_path_cache_set}" ]; then

    export _path_cache_sfx=""
    export _path_cache_pfx=""
    export _path_cache_set=""

    _cache_load path

    PATH="${_path_cache_pfx}${PATH}${_path_cache_sfx}"

fi

# discover path

if [ -z "${_path_cache_set}" ]; then

    # help viewer

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Microsoft\ Help\ Viewer/ -maxdepth 2 -type f -name HlpViewer.exe -printf :%h 2> /dev/null)"

    # visual studio dev utils

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Microsoft\ Visual\ Studio*/Common7/IDE -maxdepth 1 -type f -name devenv.exe -printf :%h 2> /dev/null)"
    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Microsoft\ Visual\ Studio*/VC/bin -maxdepth 1 -type f -name cl.exe -printf :%h 2> /dev/null)"

    # windows debugging tools

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Windows\ Kits/*/Debuggers/x86 -maxdepth 1 -type f -name windbg.exe -printf :%h 2> /dev/null)"
    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Windows\ Kits/*/bin/x86 -maxdepth 1 -type f -name wsddebug_client.exe -printf :%h 2> /dev/null)"
    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Windows\ Kits/*/Tools/x86 -maxdepth 1 -type f -name winerror.exe -printf :%h 2> /dev/null)"

    # visual studio performance tools

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Microsoft\ Visual\ Studio*/Team\ Tools/Performance\ Tools -maxdepth 2 -type f -name vsinstr.exe -printf :%h 2> /dev/null)"

    # sysinternals

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c -mindepth 2 -maxdepth 2 -type f -name PsExec.exe -printf :%h 2> /dev/null)"

    # msbuild

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/MSBuild/*/Bin -maxdepth 1 -type f -name MSBuild.exe -printf :%h 2> /dev/null)"
    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Windows/Microsoft.NET/Framework/* -maxdepth 1 -type f -name MSBuild.exe -printf :%h 2> /dev/null)"

    # ida

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/IDA* -maxdepth 1 -type f -name idaq.exe -printf :%h 2> /dev/null)"

    # java

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Java/*/bin -maxdepth 1 -type f -name java.exe -printf :%h 2> /dev/null)"

    # coverity

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Coverity/Coverity\ Static\ Analysis/bin -maxdepth 1 -type f -name cov-build.exe -printf :%h 2> /dev/null)"

    # cmake

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Cmake*/bin -maxdepth 1 -type f -name cmake.exe -printf :%h 2> /dev/null)"

    # ccollab

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Collaborator\ Client -maxdepth 1 -type f -name ccollab.exe -printf :%h 2> /dev/null)"

    # dr. memory

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Dr\.\ Memory/bin -maxdepth 1 -type f -name drmemory.exe -printf :%h 2> /dev/null)"

    # Office

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/Microsoft\ Office/Office*/ -maxdepth 0 -type d -printf :%h 2> /dev/null)"

    # LibreOffice

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/Program\ Files*/LibreOffice*/program/soffice -maxdepth 0 -type f -printf :%h 2> /dev/null)"

    # eclipse

    _path_cache_sfx="${_path_cache_sfx}$(find /cygdrive/c/eclipse/ -maxdepth 0 -type d -printf :%h 2> /dev/null)"

    # bit-utils

    if [ -d "${HOME}/.bash/bundle/bit-utils" ]; then
        _path_cache_sfx="${_path_cache_sfx}:${HOME}/.bash/bundle/bit-utils"
    fi

    # aliases / functions

    _path_cache_pfx="${HOME}/.bash/scripts:${_path_cache_pfx}"

    # mark discovery complete

    _path_cache_set=true

    # save to file

    _cache_save path _path_cache_

    # set path

    PATH="${_path_cache_pfx}${PATH}${_path_cache_sfx}"

fi

# load manpath from file

if [ -z "${_manpath_cache_set}" ]; then

    export _manpath_cache_sfx=""
    export _manpath_cache_pfx=""
    export _manpath_cache_set=""

    _cache_load manpath

    MANPATH="${_manpath_cache_pfx}${MANPATH}${_manpath_cache_sfx}"

fi

# discover manpath

if [ -z "${_manpath_cache_set}" ]; then

    # discover man directories

    _manpath_cache_sfx="${_manpath_cache_sfx}$(find /usr /opt "${HOME}" -maxdepth 4 -type d -name man -printf :%p 2> /dev/null)"

    # mark discovery complete

    _manpath_cache_set=true

    # save to file

    _cache_save manpath _manpath_cache_

    # set manpath

    MANPATH="${_manpath_cache_pfx}${MANPATH}${_manpath_cache_sfx}"

fi

export MANPATH

# set INFOPATH so it includes users' private info if it exists

if [ -d "${HOME}/info" ]; then
    # find /usr /opt ${HOME} -maxdepth 4 -type f -regex '.*[^/]\.info\(\-[0-9]+\)?\(\.gz\)?' -printf '%h\n' | sort | uniq
    INFOPATH="${HOME}/info:${INFOPATH}"
fi

# set symbol path for symbolic debugging on windows

export _NT_SYMBOL_PATH="srv*C:\\symbols*https://msdl.microsoft.com/download/symbols"

# TODO:
# path settings for: android, python, iexplore, chrome, firefox

